name: Deploy to Hostinger

on:
  push:
    branches:
      - main  # Change if your deployment branch is different

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12.3"  # Adjust based on your project

      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa  # ✅ Fix possible Windows line endings
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p 65002 -H 147.93.42.198 >> ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -p 65002 u866892645@147.93.42.198 "echo '✅ SSH connection successful!'"

      - name: Deploy to Hostinger via SSH
        run: |
          ssh -o StrictHostKeyChecking=no -p 65002 u866892645@147.93.42.198 << 'EOF'
          # ✅ Navigate to home directory
          cd ~

          # ✅ Clone repo if it doesn't exist
          if [ ! -d "your-app" ]; then
            git clone https://github.com/FinCoFella/NudgeMe.git your-app
          fi

          # ✅ Pull latest changes
          cd your-app
          git reset --hard
          git pull origin main

          # ✅ Set up virtual environment
          python3 -m venv .venv
          source .venv/bin/activate && pip install -r requirements.txt

          # ✅ Ensure OpenAI API key is set
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env

          # ✅ Ensure uploads folder exists
          mkdir -p uploads
          chmod 777 uploads

          # ✅ Stop any running Flask or Gunicorn processes
          pkill -f "flask run" || true
          pkill -f "gunicorn" || true

          # ✅ Start Flask in Background
          nohup bash -c 'source .venv/bin/activate && flask run --host=0.0.0.0 --port=5000' &

          EOF




